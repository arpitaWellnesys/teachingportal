{"version":3,"sources":["ng://otp-verification/lib/otp-verification.service.ts","ng://otp-verification/lib/otp-verification.component.ts","ng://otp-verification/lib/otp-verification.directive.ts","ng://otp-verification/lib/otp-verification.module.ts"],"names":["OtpVerificationService","prototype","isBackspace","key","Injectable","args","providedIn","OtpVerificationComponent","nextDigit","event","next","previous","current","this","specialKeys","includes","code","otpVerificationService","isAlphanumeric","isNaN","value","focus","length","getModifierState","toUpperCase","setTimeout","returnOtp","otp","Array","from","otpVal","nativeElement","children","forEach","child","otpOut","emit","Component","selector","template","Input","Output","ViewChild","EventEmitter","inputLimt","OtpVerificationDirective","onKeyDown","e","shiftKey","test","preventDefault","Directive","HostListener","OtpVerificationModule","NgModule","declarations","imports","providers","exports"],"mappings":"8QAAA,IAAAA,GASSA,EAAAC,UAAAC,YAAP,SAAmBC,GACjB,MAAe,cAARA,uBARVC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,uJAIZ,SAAAN,KCPF,IAAAO,GA6BSA,EAAAN,UAAAO,UAAP,SAAiBC,EAAOC,EAAMC,EAAUC,GAClCC,KAAKC,YAAYC,SAASN,EAAMO,QAG/BH,KAAKI,uBAAuBf,YAAYO,EAAMN,MAASU,KAAKK,iBAAkBC,MAAMV,EAAMN,MAI3FU,KAAKI,uBAAuBf,YAAYO,EAAMN,KAC1B,KAAlBS,EAAQQ,OAAgBT,GAC1BC,EAAQQ,MAAQ,GAChBT,EAASU,SACAV,GACTA,EAASS,MAAQ,GACjBT,EAASU,SAETT,EAAQQ,MAAQ,GAERP,KAAKI,uBAAuBf,YAAYO,EAAMN,OAC/B,IAArBM,EAAMN,IAAImB,SACRb,EAAMc,iBAAiB,YACzBX,EAAQQ,MAAQX,EAAMN,IAAIqB,cAE1BZ,EAAQQ,MAAQX,EAAMN,KAG1BsB,WAAU,WACJf,GACFA,EAAKW,WAIXR,KAAKa,aA3BHd,EAAQQ,MAAQ,KA8Bbb,EAAAN,UAAAyB,UAAP,eACMC,EAAM,GACVC,MAAMC,KAAKhB,KAAKiB,OAAOC,cAAcC,UAAUC,QAAO,SAACC,GAChDA,EAAa,QAClBP,GAAOO,EAAa,SAGH,IAAfP,EAAIL,QACNT,KAAKsB,OAAOC,KAAKT,wBArEtBU,EAAAA,UAAShC,KAAA,CAAC,CACTiC,SAAU,SACVC,SAAA,gyCAJOvC,6CASNwC,EAAAA,sBAEAC,EAAAA,uBAEAC,EAAAA,UAASrC,KAAA,CAAC,UA8DbE,GAnDE,SAAAA,EACUU,GAAAJ,KAAAI,uBAAAA,EAdAJ,KAAAsB,OAAS,IAAIQ,EAAAA,aAIhB9B,KAAAC,YAAc,CACnB,WAAY,cAAe,eAAgB,YAAa,aACxD,UAAY,WAAe,SAAgB,YAAa,UACxD,QAAY,YAAe,SAAgB,SAAa,MACxD,OAAY,WAAe,aAAgB,UAGtCD,KAAA+B,UAAY,GCvBrB,IAAAC,GAYEA,EAAA5C,UAAA6C,UADA,SACUC,GACHlC,KAAKK,iBAAmB6B,EAAEC,WAAc,aAAaC,KAAKF,EAAE/B,OAAS,cAAciC,KAAKF,EAAE/B,QAC7F+B,EAAEG,iBAEArC,KAAKK,iBAAmB,WAAW+B,KAAKF,EAAE/B,OAC5C+B,EAAEG,sCAdPC,EAAAA,UAAS9C,KAAA,CAAC,CACTiC,SAAU,kEAKTE,EAAAA,yBAEAY,EAAAA,aAAY/C,KAAA,CAAC,UAAW,CAAC,cAS5BwC,GAjBA,SAAAA,IAMWhC,KAAAK,gBAAiB,ECT5B,IAAAmC,uBAICC,EAAAA,SAAQjD,KAAA,CAAC,CACRkD,aAAc,CAAChD,EAA0BsC,GACzCW,QAAS,GACTC,UAAW,GACXC,QAAS,CAACnD,OAEyB8C,GANrC,SAAAA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OtpVerificationService {\n\n  constructor() { }\n\n  public isBackspace(key) {\n    return key === 'Backspace';\n  }\n\n}\n","import { Component, Output, ViewChild, EventEmitter, Input, ElementRef } from '@angular/core';\nimport { OtpVerificationService } from './otp-verification.service';\n\n@Component({\n  selector: 'ng-otp',\n  templateUrl: './otp-verification.component.html',\n  styleUrls: ['./otp-verification.component.scss']\n})\nexport class OtpVerificationComponent {\n\n  @Input() isAlphanumeric: boolean;\n\n  @Output() otpOut = new EventEmitter();\n\n  @ViewChild('otp') otpVal: ElementRef;\n\n  public specialKeys = [\n    'CapsLock', 'ControlLeft', 'ControlRight', 'ShiftLeft', 'ShiftRight',\n    'AltLeft' , 'AltRight'   , 'Escape'      , 'Backquote', 'ArrowUp'   ,\n    'Space'   , 'ArrowDown'  , 'Delete'      , 'Insert'   , 'End'       ,\n    'Home'    , 'PageDown'   , 'ArrowRight'  , 'WakeUp'\n  ];\n\n  public inputLimt = [];\n\n  constructor(\n    private otpVerificationService: OtpVerificationService\n  ) { }\n\n  public nextDigit(event, next, previous, current) {\n    if (this.specialKeys.includes(event.code)) {\n      return;\n    }\n    if (!this.otpVerificationService.isBackspace(event.key) && !this.isAlphanumeric && isNaN(event.key)) {\n      current.value = '';\n      return;\n    }\n    if (this.otpVerificationService.isBackspace(event.key)) {\n      if (current.value !== '' && previous) {\n        current.value = '';\n        previous.focus();\n      } else if (previous) {\n        previous.value = '';\n        previous.focus();\n      } else {\n        current.value = '';\n      }\n    } else if (!this.otpVerificationService.isBackspace(event.key)) {\n      if (event.key.length === 1) {\n        if (event.getModifierState('CapsLock')) {\n          current.value = event.key.toUpperCase();\n        } else {\n          current.value = event.key;\n        }\n      }\n      setTimeout(() => {\n        if (next) {\n          next.focus();\n        }\n      });\n    }\n    this.returnOtp();\n  }\n\n  public returnOtp() {\n    let otp = '';\n    Array.from(this.otpVal.nativeElement.children).forEach(child => {\n      if (!child['value']) { return; }\n      otp += child['value'];\n    });\n\n    if (otp.length === 4) {\n      this.otpOut.emit(otp);\n    }\n  }\n\n}\n","import { Directive, HostListener, Input } from '@angular/core';\n\n\n@Directive({\n  selector: '[angularOnlyNumber]'\n})\n\nexport class OtpVerificationDirective {\n\n  @Input() isAlphanumeric = true;\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(e: KeyboardEvent) {\n    if (!this.isAlphanumeric && (e.shiftKey || !(/Digit[0-9]/.test(e.code) || /Numpad[0-9]/.test(e.code)))) {\n      e.preventDefault();\n    }\n    if (this.isAlphanumeric && !/Key[A-Z]/.test(e.code)) {\n      e.preventDefault();\n    }\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { OtpVerificationComponent } from './otp-verification.component';\nimport { OtpVerificationDirective } from './otp-verification.directive';\n\n@NgModule({\n  declarations: [OtpVerificationComponent, OtpVerificationDirective],\n  imports: [],\n  providers: [],\n  exports: [OtpVerificationComponent]\n})\nexport class OtpVerificationModule { }\n"]}