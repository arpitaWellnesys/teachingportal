!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("otp-verification",["exports","@angular/core"],e):e(t["otp-verification"]={},t.ng.core)}(this,function(t,e){"use strict";var i=(n.prototype.isBackspace=function(t){return"Backspace"===t},n.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],n.ctorParameters=function(){return[]},n.ngInjectableDef=e.defineInjectable({factory:function(){return new n},token:n,providedIn:"root"}),n);function n(){}var o=(r.prototype.nextDigit=function(t,e,i,n){this.specialKeys.includes(t.code)||(this.otpVerificationService.isBackspace(t.key)||this.isAlphanumeric||!isNaN(t.key)?(this.otpVerificationService.isBackspace(t.key)?""!==n.value&&i?(n.value="",i.focus()):i?(i.value="",i.focus()):n.value="":this.otpVerificationService.isBackspace(t.key)||(1===t.key.length&&(t.getModifierState("CapsLock")?n.value=t.key.toUpperCase():n.value=t.key),setTimeout(function(){e&&e.focus()})),this.returnOtp()):n.value="")},r.prototype.returnOtp=function(){var e="";Array.from(this.otpVal.nativeElement.children).forEach(function(t){t.value&&(e+=t.value)}),4===e.length&&this.otpOut.emit(e)},r.decorators=[{type:e.Component,args:[{selector:"ng-otp",template:'<div class="angular-otp__wrap">\n  <form autocomplete="off" novalidate>\n    <div class="angular-otp__input-div" #otp>\n      <input type="text" angularOnlyNumber [isAlphanumeric]="isAlphanumeric" #otpDigit1 autofocus\n        (keydown)="nextDigit($event, otpDigit2, 0, otpDigit1)" name="digit1" placeholder="-" maxlength="1">\n      <input type="text" angularOnlyNumber [isAlphanumeric]="isAlphanumeric" #otpDigit2\n        (keydown)="nextDigit($event, otpDigit3, otpDigit1, otpDigit2)" name="digit2" placeholder="-" maxlength="1">\n      <input type="text" angularOnlyNumber [isAlphanumeric]="isAlphanumeric" #otpDigit3\n        (keydown)="nextDigit($event, otpDigit4, otpDigit2, otpDigit3)" name="digit3" placeholder="-" maxlength="1">\n      <input type="text" angularOnlyNumber [isAlphanumeric]="isAlphanumeric" #otpDigit4\n        (keydown)="nextDigit($event, 0, otpDigit3, otpDigit4)" name="digit4" placeholder="-" maxlength="1">\n    </div>\n  </form>\n</div>',styles:[".angular-otp__input-div{border-bottom:2px solid #d7d7d7;justify-content:center;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.angular-otp__input-div input{width:42px;height:45px;background:0 0;border:none;text-align:center;font-size:25px;font-weight:600;outline:0}"]}]}],r.ctorParameters=function(){return[{type:i}]},r.propDecorators={isAlphanumeric:[{type:e.Input}],otpOut:[{type:e.Output}],otpVal:[{type:e.ViewChild,args:["otp"]}]},r);function r(t){this.otpVerificationService=t,this.otpOut=new e.EventEmitter,this.specialKeys=["CapsLock","ControlLeft","ControlRight","ShiftLeft","ShiftRight","AltLeft","AltRight","Escape","Backquote","ArrowUp","Space","ArrowDown","Delete","Insert","End","Home","PageDown","ArrowRight","WakeUp"],this.inputLimt=[]}var a=(p.prototype.onKeyDown=function(t){this.isAlphanumeric||!t.shiftKey&&(/Digit[0-9]/.test(t.code)||/Numpad[0-9]/.test(t.code))||t.preventDefault(),this.isAlphanumeric&&!/Key[A-Z]/.test(t.code)&&t.preventDefault()},p.decorators=[{type:e.Directive,args:[{selector:"[angularOnlyNumber]"}]}],p.propDecorators={isAlphanumeric:[{type:e.Input}],onKeyDown:[{type:e.HostListener,args:["keydown",["$event"]]}]},p);function p(){this.isAlphanumeric=!0}var c=(u.decorators=[{type:e.NgModule,args:[{declarations:[o,a],imports:[],providers:[],exports:[o]}]}],u);function u(){}t.OtpVerificationService=i,t.OtpVerificationComponent=o,t.OtpVerificationModule=c,t.Éµa=a,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=otp-verification.umd.min.js.map